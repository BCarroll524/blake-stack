{
  "version": 3,
  "sources": ["<stdin>", "../app/entry.server.tsx", "../app/root.tsx", "../app/utils/session.server.ts", "../app/models/user.server.ts", "../app/utils/db.server.ts", "../app/routes/healthcheck.tsx", "../app/routes/logout.tsx", "../app/routes/index.tsx", "../app/utils.ts", "../app/routes/login.tsx", "../app/routes/join.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "import { PassThrough } from \"stream\";\nimport type { EntryContext } from \"@remix-run/node\";\nimport { Response } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport isbot from \"isbot\";\nimport { renderToPipeableStream } from \"react-dom/server\";\n\nconst ABORT_DELAY = 5000;\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  const callbackName = isbot(request.headers.get(\"user-agent\"))\n    ? \"onAllReady\"\n    : \"onShellReady\";\n\n  return new Promise((resolve, reject) => {\n    let didError = false;\n\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer context={remixContext} url={request.url} />,\n      {\n        [callbackName]: () => {\n          const body = new PassThrough();\n\n          responseHeaders.set(\"Content-Type\", \"text/html\");\n\n          resolve(\n            new Response(body, {\n              headers: responseHeaders,\n              status: didError ? 500 : responseStatusCode,\n            })\n          );\n\n          pipe(body);\n        },\n        onShellError: (err: unknown) => {\n          reject(err);\n        },\n        onError: (error: unknown) => {\n          didError = true;\n\n          console.error(error);\n        },\n      }\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n", "import type { LinksFunction, LoaderArgs, MetaFunction } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n} from \"@remix-run/react\";\n\nimport tailwindStylesheetUrl from \"./styles/tailwind.css\";\nimport { getUser } from \"./utils/session.server\";\n\nexport const links: LinksFunction = () => {\n  return [{ rel: \"stylesheet\", href: tailwindStylesheetUrl }];\n};\n\nexport const meta: MetaFunction = () => ({\n  charset: \"utf-8\",\n  title: \"Remix Notes\",\n  viewport: \"width=device-width,initial-scale=1\",\n});\n\nexport async function loader({ request }: LoaderArgs) {\n  return json({\n    user: await getUser(request),\n  });\n}\n\nexport default function App() {\n  return (\n    <html lang=\"en\" className=\"h-full\">\n      <head>\n        <Meta />\n        <Links />\n      </head>\n      <body className=\"h-full\">\n        <Outlet />\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>\n  );\n}\n", "import { createCookieSessionStorage, redirect } from \"@remix-run/node\";\nimport invariant from \"tiny-invariant\";\n\nimport type { User } from \"~/models/user.server\";\nimport { getUserById } from \"~/models/user.server\";\n\ninvariant(process.env.SESSION_SECRET, \"SESSION_SECRET must be set\");\n\nexport const sessionStorage = createCookieSessionStorage({\n  cookie: {\n    name: \"__session\",\n    httpOnly: true,\n    path: \"/\",\n    sameSite: \"lax\",\n    secrets: [process.env.SESSION_SECRET],\n    secure: process.env.NODE_ENV === \"production\",\n  },\n});\n\nconst USER_SESSION_KEY = \"userId\";\n\nexport async function getSession(request: Request) {\n  const cookie = request.headers.get(\"Cookie\");\n  return sessionStorage.getSession(cookie);\n}\n\nexport async function getUserId(\n  request: Request\n): Promise<User[\"id\"] | undefined> {\n  const session = await getSession(request);\n  const userId = session.get(USER_SESSION_KEY);\n  return userId;\n}\n\nexport async function getUser(request: Request) {\n  const userId = await getUserId(request);\n  if (userId === undefined) return null;\n\n  const user = await getUserById(userId);\n  if (user) return user;\n\n  throw await logout(request);\n}\n\nexport async function requireUserId(\n  request: Request,\n  redirectTo: string = new URL(request.url).pathname\n) {\n  const userId = await getUserId(request);\n  if (!userId) {\n    const searchParams = new URLSearchParams([[\"redirectTo\", redirectTo]]);\n    throw redirect(`/login?${searchParams}`);\n  }\n  return userId;\n}\n\nexport async function requireUser(request: Request) {\n  const userId = await requireUserId(request);\n\n  const user = await getUserById(userId);\n  if (user) return user;\n\n  throw await logout(request);\n}\n\nexport async function createUserSession({\n  request,\n  userId,\n  remember,\n  redirectTo,\n}: {\n  request: Request;\n  userId: string;\n  remember: boolean;\n  redirectTo: string;\n}) {\n  const session = await getSession(request);\n  session.set(USER_SESSION_KEY, userId);\n  return redirect(redirectTo, {\n    headers: {\n      \"Set-Cookie\": await sessionStorage.commitSession(session, {\n        maxAge: remember\n          ? 60 * 60 * 24 * 7 // 7 days\n          : undefined,\n      }),\n    },\n  });\n}\n\nexport async function logout(request: Request) {\n  const session = await getSession(request);\n  return redirect(\"/\", {\n    headers: {\n      \"Set-Cookie\": await sessionStorage.destroySession(session),\n    },\n  });\n}\n", "import type { Password, User } from \"@prisma/client\";\nimport bcrypt from \"bcryptjs\";\n\nimport { prisma } from \"~/utils/db.server\";\n\nexport type { User } from \"@prisma/client\";\n\nexport async function getUserById(id: User[\"id\"]) {\n  return prisma.user.findUnique({ where: { id } });\n}\n\nexport async function getUserByEmail(email: User[\"email\"]) {\n  return prisma.user.findUnique({ where: { email } });\n}\n\nexport async function createUser(email: User[\"email\"], password: string) {\n  const hashedPassword = await bcrypt.hash(password, 10);\n\n  return prisma.user.create({\n    data: {\n      email,\n      password: {\n        create: {\n          hash: hashedPassword,\n        },\n      },\n    },\n  });\n}\n\nexport async function deleteUserByEmail(email: User[\"email\"]) {\n  return prisma.user.delete({ where: { email } });\n}\n\nexport async function verifyLogin(\n  email: User[\"email\"],\n  password: Password[\"hash\"]\n) {\n  const userWithPassword = await prisma.user.findUnique({\n    where: { email },\n    include: {\n      password: true,\n    },\n  });\n\n  if (!userWithPassword || !userWithPassword.password) {\n    return null;\n  }\n\n  const isValid = await bcrypt.compare(\n    password,\n    userWithPassword.password.hash\n  );\n\n  if (!isValid) {\n    return null;\n  }\n\n  const { password: _password, ...userWithoutPassword } = userWithPassword;\n\n  return userWithoutPassword;\n}\n", "import { PrismaClient } from \"@prisma/client\";\n\nlet prisma: PrismaClient;\n\ndeclare global {\n  var __db__: PrismaClient;\n}\n\n// this is needed because in development we don't want to restart\n// the server with every change, but we want to make sure we don't\n// create a new connection to the DB with every change either.\n// in production we'll have a single connection to the DB.\nif (process.env.NODE_ENV === \"production\") {\n  prisma = new PrismaClient();\n} else {\n  if (!global.__db__) {\n    global.__db__ = new PrismaClient();\n  }\n  prisma = global.__db__;\n  prisma.$connect();\n}\n\nexport { prisma };\n", "// learn more: https://fly.io/docs/reference/configuration/#services-http_checks\nimport type { LoaderArgs } from \"@remix-run/node\";\n\nimport { prisma } from \"~/utils/db.server\";\n\nexport async function loader({ request }: LoaderArgs) {\n  const host =\n    request.headers.get(\"X-Forwarded-Host\") ?? request.headers.get(\"host\");\n\n  try {\n    const url = new URL(\"/\", `http://${host}`);\n    // if we can connect to the database and make a simple query\n    // and make a HEAD request to ourselves, then we're good.\n    await Promise.all([\n      prisma.user.count(),\n      fetch(url.toString(), { method: \"HEAD\" }).then((r) => {\n        if (!r.ok) return Promise.reject(r);\n      }),\n    ]);\n    return new Response(\"OK\");\n  } catch (error: unknown) {\n    console.log(\"healthcheck \u274C\", { error });\n    return new Response(\"ERROR\", { status: 500 });\n  }\n}\n", "import type { ActionArgs } from \"@remix-run/node\";\nimport { redirect } from \"@remix-run/node\";\n\nimport { logout } from \"~/utils/session.server\";\n\nexport async function action({ request }: ActionArgs) {\n  return logout(request);\n}\n\nexport async function loader() {\n  return redirect(\"/\");\n}\n", "import { Link } from \"@remix-run/react\";\n\nimport { useOptionalUser } from \"~/utils\";\n\nexport default function Index() {\n  const user = useOptionalUser();\n  return (\n    <main className=\"relative min-h-screen bg-white sm:flex sm:items-center sm:justify-center\">\n      <div className=\"relative sm:pb-16 sm:pt-8\">\n        <div className=\"mx-auto max-w-7xl sm:px-6 lg:px-8\">\n          <div className=\"relative shadow-xl sm:overflow-hidden sm:rounded-2xl\">\n            <div className=\"absolute inset-0\">\n              <img\n                className=\"h-full w-full object-cover\"\n                src=\"https://user-images.githubusercontent.com/1500684/157774694-99820c51-8165-4908-a031-34fc371ac0d6.jpg\"\n                alt=\"Sonic Youth On Stage\"\n              />\n              <div className=\"absolute inset-0 bg-[color:rgba(254,204,27,0.5)] mix-blend-multiply\" />\n            </div>\n            <div className=\"relative px-4 pt-16 pb-8 sm:px-6 sm:pt-24 sm:pb-14 lg:px-8 lg:pb-20 lg:pt-32\">\n              <h1 className=\"text-center text-6xl font-extrabold tracking-tight sm:text-8xl lg:text-9xl\">\n                <span className=\"block uppercase text-yellow-500 drop-shadow-md\">\n                  Indie Stack\n                </span>\n              </h1>\n              <p className=\"mx-auto mt-6 max-w-lg text-center text-xl text-white sm:max-w-3xl\">\n                Check the README.md file for instructions on how to get this\n                project deployed.\n              </p>\n              <div className=\"mx-auto mt-10 max-w-sm sm:flex sm:max-w-none sm:justify-center\">\n                {user ? (\n                  <Link\n                    to=\"/notes\"\n                    className=\"flex items-center justify-center rounded-md border border-transparent bg-white px-4 py-3 text-base font-medium text-yellow-700 shadow-sm hover:bg-yellow-50 sm:px-8\"\n                  >\n                    View Notes for {user.email}\n                  </Link>\n                ) : (\n                  <div className=\"space-y-4 sm:mx-auto sm:inline-grid sm:grid-cols-2 sm:gap-5 sm:space-y-0\">\n                    <Link\n                      to=\"/join\"\n                      className=\"flex items-center justify-center rounded-md border border-transparent bg-white px-4 py-3 text-base font-medium text-yellow-700 shadow-sm hover:bg-yellow-50 sm:px-8\"\n                    >\n                      Sign up\n                    </Link>\n                    <Link\n                      to=\"/login\"\n                      className=\"flex items-center justify-center rounded-md bg-yellow-500 px-4 py-3 font-medium text-white hover:bg-yellow-600\"\n                    >\n                      Log In\n                    </Link>\n                  </div>\n                )}\n              </div>\n              <a href=\"https://remix.run\">\n                <img\n                  src=\"https://user-images.githubusercontent.com/1500684/158298926-e45dafff-3544-4b69-96d6-d3bcc33fc76a.svg\"\n                  alt=\"Remix\"\n                  className=\"mx-auto mt-16 w-full max-w-[12rem] md:max-w-[16rem]\"\n                />\n              </a>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"mx-auto max-w-7xl py-2 px-4 sm:px-6 lg:px-8\">\n          <div className=\"mt-6 flex flex-wrap justify-center gap-8\">\n            {[\n              {\n                src: \"https://user-images.githubusercontent.com/1500684/157764397-ccd8ea10-b8aa-4772-a99b-35de937319e1.svg\",\n                alt: \"Fly.io\",\n                href: \"https://fly.io\",\n              },\n              {\n                src: \"https://user-images.githubusercontent.com/1500684/157764395-137ec949-382c-43bd-a3c0-0cb8cb22e22d.svg\",\n                alt: \"SQLite\",\n                href: \"https://sqlite.org\",\n              },\n              {\n                src: \"https://user-images.githubusercontent.com/1500684/157764484-ad64a21a-d7fb-47e3-8669-ec046da20c1f.svg\",\n                alt: \"Prisma\",\n                href: \"https://prisma.io\",\n              },\n              {\n                src: \"https://user-images.githubusercontent.com/1500684/157764276-a516a239-e377-4a20-b44a-0ac7b65c8c14.svg\",\n                alt: \"Tailwind\",\n                href: \"https://tailwindcss.com\",\n              },\n              {\n                src: \"https://user-images.githubusercontent.com/1500684/157764454-48ac8c71-a2a9-4b5e-b19c-edef8b8953d6.svg\",\n                alt: \"Cypress\",\n                href: \"https://www.cypress.io\",\n              },\n              {\n                src: \"https://user-images.githubusercontent.com/1500684/157772386-75444196-0604-4340-af28-53b236faa182.svg\",\n                alt: \"MSW\",\n                href: \"https://mswjs.io\",\n              },\n              {\n                src: \"https://user-images.githubusercontent.com/1500684/157772447-00fccdce-9d12-46a3-8bb4-fac612cdc949.svg\",\n                alt: \"Vitest\",\n                href: \"https://vitest.dev\",\n              },\n              {\n                src: \"https://user-images.githubusercontent.com/1500684/157772662-92b0dd3a-453f-4d18-b8be-9fa6efde52cf.png\",\n                alt: \"Testing Library\",\n                href: \"https://testing-library.com\",\n              },\n              {\n                src: \"https://user-images.githubusercontent.com/1500684/157772934-ce0a943d-e9d0-40f8-97f3-f464c0811643.svg\",\n                alt: \"Prettier\",\n                href: \"https://prettier.io\",\n              },\n              {\n                src: \"https://user-images.githubusercontent.com/1500684/157772990-3968ff7c-b551-4c55-a25c-046a32709a8e.svg\",\n                alt: \"ESLint\",\n                href: \"https://eslint.org\",\n              },\n              {\n                src: \"https://user-images.githubusercontent.com/1500684/157773063-20a0ed64-b9f8-4e0b-9d1e-0b65a3d4a6db.svg\",\n                alt: \"TypeScript\",\n                href: \"https://typescriptlang.org\",\n              },\n            ].map((img) => (\n              <a\n                key={img.href}\n                href={img.href}\n                className=\"flex h-16 w-32 justify-center p-1 grayscale transition hover:grayscale-0 focus:grayscale-0\"\n              >\n                <img alt={img.alt} src={img.src} className=\"object-contain\" />\n              </a>\n            ))}\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n}\n", "import { useMatches } from \"@remix-run/react\";\nimport { useMemo } from \"react\";\n\nimport type { User } from \"~/models/user.server\";\n\nconst DEFAULT_REDIRECT = \"/\";\n\n/**\n * This should be used any time the redirect path is user-provided\n * (Like the query string on our login/signup pages). This avoids\n * open-redirect vulnerabilities.\n * @param {string} to The redirect destination\n * @param {string} defaultRedirect The redirect to use if the to is unsafe.\n */\nexport function safeRedirect(\n  to: FormDataEntryValue | string | null | undefined,\n  defaultRedirect: string = DEFAULT_REDIRECT\n) {\n  if (!to || typeof to !== \"string\") {\n    return defaultRedirect;\n  }\n\n  if (!to.startsWith(\"/\") || to.startsWith(\"//\")) {\n    return defaultRedirect;\n  }\n\n  return to;\n}\n\n/**\n * This base hook is used in other hooks to quickly search for specific data\n * across all loader data using useMatches.\n * @param {string} id The route id\n * @returns {JSON|undefined} The router data or undefined if not found\n */\nexport function useMatchesData(\n  id: string\n): Record<string, unknown> | undefined {\n  const matchingRoutes = useMatches();\n  const route = useMemo(\n    () => matchingRoutes.find((route) => route.id === id),\n    [matchingRoutes, id]\n  );\n  return route?.data;\n}\n\nfunction isUser(user: any): user is User {\n  return user && typeof user === \"object\" && typeof user.email === \"string\";\n}\n\nexport function useOptionalUser(): User | undefined {\n  const data = useMatchesData(\"root\");\n  if (!data || !isUser(data.user)) {\n    return undefined;\n  }\n  return data.user;\n}\n\nexport function useUser(): User {\n  const maybeUser = useOptionalUser();\n  if (!maybeUser) {\n    throw new Error(\n      \"No user found in root loader, but user is required by useUser. If user is optional, try useOptionalUser instead.\"\n    );\n  }\n  return maybeUser;\n}\n\nexport function validateEmail(email: unknown): email is string {\n  return typeof email === \"string\" && email.length > 3 && email.includes(\"@\");\n}\n", "import type { ActionArgs, LoaderArgs, MetaFunction } from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { Form, Link, useActionData, useSearchParams } from \"@remix-run/react\";\nimport * as React from \"react\";\n\nimport { createUserSession, getUserId } from \"~/utils/session.server\";\nimport { verifyLogin } from \"~/models/user.server\";\nimport { safeRedirect, validateEmail } from \"~/utils\";\n\nexport async function loader({ request }: LoaderArgs) {\n  const userId = await getUserId(request);\n  if (userId) return redirect(\"/\");\n  return json({});\n}\n\nexport async function action({ request }: ActionArgs) {\n  const formData = await request.formData();\n  const email = formData.get(\"email\");\n  const password = formData.get(\"password\");\n  const redirectTo = safeRedirect(formData.get(\"redirectTo\"), \"/notes\");\n  const remember = formData.get(\"remember\");\n\n  if (!validateEmail(email)) {\n    return json(\n      { errors: { email: \"Email is invalid\", password: null } },\n      { status: 400 }\n    );\n  }\n\n  if (typeof password !== \"string\" || password.length === 0) {\n    return json(\n      { errors: { email: null, password: \"Password is required\" } },\n      { status: 400 }\n    );\n  }\n\n  if (password.length < 8) {\n    return json(\n      { errors: { email: null, password: \"Password is too short\" } },\n      { status: 400 }\n    );\n  }\n\n  const user = await verifyLogin(email, password);\n\n  if (!user) {\n    return json(\n      { errors: { email: \"Invalid email or password\", password: null } },\n      { status: 400 }\n    );\n  }\n\n  return createUserSession({\n    request,\n    userId: user.id,\n    remember: remember === \"on\" ? true : false,\n    redirectTo,\n  });\n}\n\nexport const meta: MetaFunction = () => {\n  return {\n    title: \"Login\",\n  };\n};\n\nexport default function LoginPage() {\n  const [searchParams] = useSearchParams();\n  const redirectTo = searchParams.get(\"redirectTo\") || \"/notes\";\n  const actionData = useActionData<typeof action>();\n  const emailRef = React.useRef<HTMLInputElement>(null);\n  const passwordRef = React.useRef<HTMLInputElement>(null);\n\n  React.useEffect(() => {\n    if (actionData?.errors?.email) {\n      emailRef.current?.focus();\n    } else if (actionData?.errors?.password) {\n      passwordRef.current?.focus();\n    }\n  }, [actionData]);\n\n  return (\n    <div className=\"flex min-h-full flex-col justify-center\">\n      <div className=\"mx-auto w-full max-w-md px-8\">\n        <Form method=\"post\" className=\"space-y-6\">\n          <div>\n            <label\n              htmlFor=\"email\"\n              className=\"block text-sm font-medium text-gray-700\"\n            >\n              Email address\n            </label>\n            <div className=\"mt-1\">\n              <input\n                ref={emailRef}\n                id=\"email\"\n                required\n                autoFocus={true}\n                name=\"email\"\n                type=\"email\"\n                autoComplete=\"email\"\n                aria-invalid={actionData?.errors?.email ? true : undefined}\n                aria-describedby=\"email-error\"\n                className=\"w-full rounded border border-gray-500 px-2 py-1 text-lg\"\n              />\n              {actionData?.errors?.email && (\n                <div className=\"pt-1 text-red-700\" id=\"email-error\">\n                  {actionData.errors.email}\n                </div>\n              )}\n            </div>\n          </div>\n\n          <div>\n            <label\n              htmlFor=\"password\"\n              className=\"block text-sm font-medium text-gray-700\"\n            >\n              Password\n            </label>\n            <div className=\"mt-1\">\n              <input\n                id=\"password\"\n                ref={passwordRef}\n                name=\"password\"\n                type=\"password\"\n                autoComplete=\"current-password\"\n                aria-invalid={actionData?.errors?.password ? true : undefined}\n                aria-describedby=\"password-error\"\n                className=\"w-full rounded border border-gray-500 px-2 py-1 text-lg\"\n              />\n              {actionData?.errors?.password && (\n                <div className=\"pt-1 text-red-700\" id=\"password-error\">\n                  {actionData.errors.password}\n                </div>\n              )}\n            </div>\n          </div>\n\n          <input type=\"hidden\" name=\"redirectTo\" value={redirectTo} />\n          <button\n            type=\"submit\"\n            className=\"w-full rounded bg-blue-500  py-2 px-4 text-white hover:bg-blue-600 focus:bg-blue-400\"\n          >\n            Log in\n          </button>\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center\">\n              <input\n                id=\"remember\"\n                name=\"remember\"\n                type=\"checkbox\"\n                className=\"h-4 w-4 rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n              />\n              <label\n                htmlFor=\"remember\"\n                className=\"ml-2 block text-sm text-gray-900\"\n              >\n                Remember me\n              </label>\n            </div>\n            <div className=\"text-center text-sm text-gray-500\">\n              Don't have an account?{\" \"}\n              <Link\n                className=\"text-blue-500 underline\"\n                to={{\n                  pathname: \"/join\",\n                  search: searchParams.toString(),\n                }}\n              >\n                Sign up\n              </Link>\n            </div>\n          </div>\n        </Form>\n      </div>\n    </div>\n  );\n}\n", "import type { ActionArgs, LoaderArgs, MetaFunction } from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { Form, Link, useActionData, useSearchParams } from \"@remix-run/react\";\nimport * as React from \"react\";\n\nimport { getUserId, createUserSession } from \"~/utils/session.server\";\n\nimport { createUser, getUserByEmail } from \"~/models/user.server\";\nimport { safeRedirect, validateEmail } from \"~/utils\";\n\nexport async function loader({ request }: LoaderArgs) {\n  const userId = await getUserId(request);\n  if (userId) return redirect(\"/\");\n  return json({});\n}\n\nexport async function action({ request }: ActionArgs) {\n  const formData = await request.formData();\n  const email = formData.get(\"email\");\n  const password = formData.get(\"password\");\n  const redirectTo = safeRedirect(formData.get(\"redirectTo\"), \"/\");\n\n  if (!validateEmail(email)) {\n    return json(\n      { errors: { email: \"Email is invalid\", password: null } },\n      { status: 400 }\n    );\n  }\n\n  if (typeof password !== \"string\" || password.length === 0) {\n    return json(\n      { errors: { email: null, password: \"Password is required\" } },\n      { status: 400 }\n    );\n  }\n\n  if (password.length < 8) {\n    return json(\n      { errors: { email: null, password: \"Password is too short\" } },\n      { status: 400 }\n    );\n  }\n\n  const existingUser = await getUserByEmail(email);\n  if (existingUser) {\n    return json(\n      {\n        errors: {\n          email: \"A user already exists with this email\",\n          password: null,\n        },\n      },\n      { status: 400 }\n    );\n  }\n\n  const user = await createUser(email, password);\n\n  return createUserSession({\n    request,\n    userId: user.id,\n    remember: false,\n    redirectTo,\n  });\n}\n\nexport const meta: MetaFunction = () => {\n  return {\n    title: \"Sign Up\",\n  };\n};\n\nexport default function Join() {\n  const [searchParams] = useSearchParams();\n  const redirectTo = searchParams.get(\"redirectTo\") ?? undefined;\n  const actionData = useActionData<typeof action>();\n  const emailRef = React.useRef<HTMLInputElement>(null);\n  const passwordRef = React.useRef<HTMLInputElement>(null);\n\n  React.useEffect(() => {\n    if (actionData?.errors?.email) {\n      emailRef.current?.focus();\n    } else if (actionData?.errors?.password) {\n      passwordRef.current?.focus();\n    }\n  }, [actionData]);\n\n  return (\n    <div className=\"flex min-h-full flex-col justify-center\">\n      <div className=\"mx-auto w-full max-w-md px-8\">\n        <Form method=\"post\" className=\"space-y-6\">\n          <div>\n            <label\n              htmlFor=\"email\"\n              className=\"block text-sm font-medium text-gray-700\"\n            >\n              Email address\n            </label>\n            <div className=\"mt-1\">\n              <input\n                ref={emailRef}\n                id=\"email\"\n                required\n                autoFocus={true}\n                name=\"email\"\n                type=\"email\"\n                autoComplete=\"email\"\n                aria-invalid={actionData?.errors?.email ? true : undefined}\n                aria-describedby=\"email-error\"\n                className=\"w-full rounded border border-gray-500 px-2 py-1 text-lg\"\n              />\n              {actionData?.errors?.email && (\n                <div className=\"pt-1 text-red-700\" id=\"email-error\">\n                  {actionData.errors.email}\n                </div>\n              )}\n            </div>\n          </div>\n\n          <div>\n            <label\n              htmlFor=\"password\"\n              className=\"block text-sm font-medium text-gray-700\"\n            >\n              Password\n            </label>\n            <div className=\"mt-1\">\n              <input\n                id=\"password\"\n                ref={passwordRef}\n                name=\"password\"\n                type=\"password\"\n                autoComplete=\"new-password\"\n                aria-invalid={actionData?.errors?.password ? true : undefined}\n                aria-describedby=\"password-error\"\n                className=\"w-full rounded border border-gray-500 px-2 py-1 text-lg\"\n              />\n              {actionData?.errors?.password && (\n                <div className=\"pt-1 text-red-700\" id=\"password-error\">\n                  {actionData.errors.password}\n                </div>\n              )}\n            </div>\n          </div>\n\n          <input type=\"hidden\" name=\"redirectTo\" value={redirectTo} />\n          <button\n            type=\"submit\"\n            className=\"w-full rounded bg-blue-500  py-2 px-4 text-white hover:bg-blue-600 focus:bg-blue-400\"\n          >\n            Create Account\n          </button>\n          <div className=\"flex items-center justify-center\">\n            <div className=\"text-center text-sm text-gray-500\">\n              Already have an account?{\" \"}\n              <Link\n                className=\"text-blue-500 underline\"\n                to={{\n                  pathname: \"/login\",\n                  search: searchParams.toString(),\n                }}\n              >\n                Log in\n              </Link>\n            </div>\n          </div>\n        </Form>\n      </div>\n    </div>\n  );\n}\n", "export default {'version':'bb14ff15','entry':{'module':'/build/entry.client-RKESCNHM.js','imports':['/build/_shared/chunk-WJFKS4HK.js','/build/_shared/chunk-5KL4PAQL.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-PLNJVTQA.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/healthcheck':{'id':'routes/healthcheck','parentId':'root','path':'healthcheck','index':undefined,'caseSensitive':undefined,'module':'/build/routes/healthcheck-QB3PEZAZ.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/index-SYMFOSV2.js','imports':['/build/_shared/chunk-T3SEI7F3.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/join':{'id':'routes/join','parentId':'root','path':'join','index':undefined,'caseSensitive':undefined,'module':'/build/routes/join-TTTZJAPG.js','imports':['/build/_shared/chunk-LM47TFZL.js','/build/_shared/chunk-T3SEI7F3.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/login':{'id':'routes/login','parentId':'root','path':'login','index':undefined,'caseSensitive':undefined,'module':'/build/routes/login-52CIUJEK.js','imports':['/build/_shared/chunk-LM47TFZL.js','/build/_shared/chunk-T3SEI7F3.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/logout':{'id':'routes/logout','parentId':'root','path':'logout','index':undefined,'caseSensitive':undefined,'module':'/build/routes/logout-DOMDNNGV.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false}},'url':'/build/manifest-BB14FF15.js'};", "\nimport * as entryServer from \"./entry.server.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes/healthcheck.tsx\";\nimport * as route2 from \"./routes/logout.tsx\";\nimport * as route3 from \"./routes/index.tsx\";\nimport * as route4 from \"./routes/login.tsx\";\nimport * as route5 from \"./routes/join.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public/build\";\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/healthcheck\": {\n      id: \"routes/healthcheck\",\n      parentId: \"root\",\n      path: \"healthcheck\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/logout\": {\n      id: \"routes/logout\",\n      parentId: \"root\",\n      path: \"logout\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/login\": {\n      id: \"routes/login\",\n      parentId: \"root\",\n      path: \"login\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/join\": {\n      id: \"routes/join\",\n      parentId: \"root\",\n      path: \"join\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route5\n    }\n  };"],
  "mappings": "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",
  "names": ["isbot", "import_node", "import_react", "import_node", "bcrypt", "bcrypt", "invariant", "loader", "loader", "loader", "import_node", "loader", "import_react", "import_react", "route", "action", "loader", "meta", "import_node", "import_react", "loader", "action", "meta", "_a", "_b", "_c", "_d", "action", "loader", "meta", "import_node", "import_react", "React", "loader", "action", "meta", "_a", "_b", "_c", "_d"]
}
